{"ast":null,"code":"var _jsxFileName = \"/Users/almazhan/Desktop/sonyc-app-ugsrp/src/pages/DataVisualization.js\";\nimport React from 'react';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport lit1 from '../images/lit1.png';\nimport lit2 from '../images/lit2.png';\nimport lit3 from '../images/lit3.png';\nimport bch1 from '../images/bch1.png';\nimport bch2 from '../images/bch2.png';\nimport bch3 from '../images/bch3.png';\nimport lit4 from '../images/lit4.png';\nimport lit5 from '../images/lit5.png';\nimport lit1a from '../images/lit1a.png';\nimport lit2a from '../images/lit2a.png';\nimport lc1 from '../images/lc1.png';\nimport lc2 from '../images/lc2.png';\nimport lc3 from '../images/lc3.png';\nimport ng1 from '../images/ng1.png';\nimport ng2 from '../images/ng2.png';\nimport ng3 from '../images/ng3.png';\nimport rc1 from '../images/rc1.png';\nimport rc2 from '../images/rc2.png';\nimport rc3 from '../images/rc3.png';\nimport rc4 from '../images/rc4.png';\nimport bc1 from '../images/bc1.png';\nimport bc2 from '../images/bc2.png';\nimport bc3 from '../images/bc3.png';\nimport ReactDOM from 'react-dom';\nimport Carousel from '../components/Carousel';\nimport { LazyImageProvider } from '../components/LazyImageContext';\nimport LazyImage from '../components/LazyImage'; //import './index.css'\n\nimport granular from '../images/granular.png';\nimport './DataVisualization.css';\nimport Collapsible from 'react-collapsible';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DataVisualization() {\n  const images = [lc1, lc2, lc3];\n  const imagesRc = [rc1, rc2, rc3, rc4];\n  const imagesNg = [ng1, ng2, ng3];\n  const imagesBg = [bc1, bc2, bc3];\n  const imagesBcg = [bch1, bch2, bch3];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"header-text\",\n        children: \"Data Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"full-text\",\n          children: \"Sensors are used to measure Air and Noise Pollution levels and visualizing this data is the first and crucial step in interpreting and making decisions about the data. We conducted research to evaluate and review state-of-the-art approaches towards visualizing the Noise and Air sensor data in web and mobile interface, current challenges in visualizing the sensor data.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"gif-text\",\n          children: \"Data Visualization Research Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"full-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: [' ', \"Guess the Data: Data Work to Understand How People Make Sense of and Use Simple Sensor Data from Homes .Albrecht Kurze, Andreas Bischof, S\\xF6ren Totzauer, Michael Storz, Maximilian Eibl, Margot Brereton, and Arne Berger. 2020.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"Proceedings of the 2020 CHI Conference on Human Factors in Computing Systems\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), \". Association for Computing Machinery, New York, NY, USA, 1\\u201312. DOI:https://doi.org/10.1145/3313831.3376273\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Collapsible, {\n            trigger: \"Read More\",\n            className: \"full-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"full-text\",\n              children: [\"The authors investigate human sensemaking of such sensor data can reveal domestic activities and to achieve that task, develop and field-test the Guess the data method,which enabled people to use and make sense of live data from their homes and to collectively interpret and reflect on anonymized data from the homes in the study. The authors decided to use simple line graphs as data visualizations for temperature, light level, humidity, barometric pressure and movement (accelerometer values). They wanted to undertake very little pre-processing, presenting close to \\u2018raw\\u2019 data, to prevent interpretation bias. Such simple time series graphs are comparable to those used in other cited studies. The findings show how participants reconstruct behavior, both individually and collectively, expose the sensitive personal data of others, and use sensor data as evidence and for lateral surveillance within the household.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this), \"Visualized sensor data used as evidence and proof: Participants used visualized data to confirm their assumptions about other residents\\u2019 behavior, not only retrospectively during discussions but also pro-actively during data collection when they had access to it. For example, a participant corrected the partner\\u2019s careless behavior regarding the light in the hallway (figure 3), which he often forgot to turn off. She confronted him with the visualization of the light sensor data, and \\u201Che was a little bit shocked\\u201D (II.A)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: lit1,\n              alt: \"poster gif\",\n              className: \"vis-img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"full-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Nicolas Maisonneuve, Matthias Stevens, Maria E. Niessen, Peter Hanappe, and Luc Steels. 2009. Citizen noise pollution monitoring.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), \"In\", ' ', /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"Proceedings of the 10th Annual International Conference on Digital Government Research: Social Networks: Making Connections between Citizens, Data and Government\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), ' ', \"(\", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"dg.o '09\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 16\n            }, this), \"). Digital Government Society of North America, 96\\u2013103. https://dl.acm.org/doi/10.5555/1556176.1556198\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Collapsible, {\n            trigger: \"Read More\",\n            className: \"full-text\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"full-text\",\n              children: [\"In this paper, authors present a new approach to monitor noise pollution involving citizens who can measure their personal exposure to noise in their everyday environment by using GPS-equipped mobile phones as noise sensors. The geo-localised measures and user-generated meta-data can be automatically sent and shared online with the public to contribute to the collective noise mapping of cities. The prototype called Noise Tube can be found online. This application collects local information from different sensors (noise level, GPS coordinates, time, user input) and sends them to the NoiseTube server which visualizes the noise level data. The server centralises and processes the data sent by the phones.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this), \"The mobile application contains a real-time signal processing algorithm which measures the loudness level of the microphone recording the environmental sound (at 22500 Hz, 16 bits) over 1 second at a chosen interval. On top of the sensing of the loudness a real time visualization is displayed on the phone with the decibels. To add meaning to this value it is associated with a colour that represents the health risk of the current exposure level: less than 70: green (no risk); between 70 and 80: yellow (be careful); more than 80: red (risky). See figure 2 below.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: lit2,\n                alt: \"poster gif\",\n                className: \"vis-img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this), \"In addition to measured loudness, the app allows to record the source or context of noise, which is not always available but remains important. Especially because the appreciation of sound and loudness is a subjective matter \\u2013 i.e. the perceived annoyance (or pleasure) does not always correlate with its loudness (see 6.2). Context is recorded through environmental tagging (source of a noise e.g.: cars, aircraft, neighbours and an annoyance rating/tag) and geo-tagging (gps positioning or place tags (such as \\u201Chome\\u201D, \\u201Cwork\\u201D, the name of the subway station, ...) Geo-tagging feature we can reconstruct the geo-coordinates afterwards notably for indoor locations (cf. subway noise map in figure 3).\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: lit3,\n                alt: \"poster gif\",\n                className: \"vis-img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this), \"Visualizing Noise Maps. Once the measured data is sent to the server, any user can see his own contributions or exposures by going to the NoiseTube website and visualizing them on a map thanks to Google Earth. The collective noise map is also publicly available constructed by aggregating all the shared participants. Each map can show a layer of participants to add context and meaning to the loudness data. The authors also allow users embed this as a web widget into their personal web pages and provide publicly accessible web API to give full access to third parties such scientists or developers can use individual or collective exposure data to create web mash-ups or analyse data for scientific purposes.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"full-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [\"Silvia Santini, Benedikt Ostermaier, and Andrea Vitaletti. 2008. First experiences using wireless sensor networks for noise pollution monitoring.\", ' ']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), \"In\", ' ', /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"Proceedings of the workshop on Real-world wireless sensor networks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), ' ', \"(\", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"REALWSN '08\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 16\n            }, this), \"). Association for Computing Machinery, New York, NY, USA, 61\\u201365. DOI:https://doi.org/10.1145/1435473.1435490\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Collapsible, {\n            trigger: \"Read More\",\n            className: \"full-text\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"full-text\",\n              children: [\"The authors focus on the assessment of environmental noise pollution in urban areas and provide a feasibility analysis of wireless sensor networks. They also present a prototype for the collection and logging of noise pollution data based on the Tmote invent prototyping platform, using which they performed indoor and outdoor noise pollution measurements. They also present tinyLAB, a Matlab-based tool developed in the context of this work, which enables real-time acquisition, processing and visualization of data collected in wireless sensor networks. Authors mention that prototyping wireless sensor network applications often requires visualizing the sensor data to quickly identify any malfunctioning. For example, figure 1 shows the responses to these acoustic events of four different nodes, clearly pointing out a misalignment in the measured equivalent noise levels. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: lit4,\n                alt: \"poster gif\",\n                className: \"vis-img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this), \"Additionally, authors mention that current tools often do not provide satisfactory data processing and visualization features and propose using Matlab as it serves scientists in managing, processing and visualizing their data and appears therefore particularly well-suited to be used in the context of wireless sensor networks. Authors develop tinyLAB, a simple framework that allows to receive and send messages from and to a sensor network and to visualize and process data as it comes from the network. tinyLAB is implemented relying solely on the Matlab software suite and offers a simple API to receive and send data.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"full-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [\"Ann-sofie Gunnarsson, Malinda Rauhala, Anders Henrysson, and Anders Ynnerman. 2006. Visualization of sensor data using mobile phone augmented reality.\", ' ']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), \"In\", ' ', /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"Proceedings of the 5th IEEE and ACM International Symposium on Mixed and Augmented Reality\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), ' ', \"(\", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"ISMAR '06\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 16\n            }, this), \"). IEEE Computer Society, USA, 233\\u2013234. DOI:https://doi.org/10.1109/ISMAR.2006.297820\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Collapsible, {\n            trigger: \"Read More\",\n            className: \"full-text\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"full-text\",\n              children: [\"The authors developed a prototype system for visual inspection of hidden structures using a mobile phone wireless ZigBee sensor network. Data collected from an embedded wireless sensor matrix is used to synthesize AR visualizations in real-time. The AR visualization is providing the user with an instant insight concerning the status of the element being augmented. The authors arrange sensors in a grid (e.g. a matrix), which allows to take an approach where individual sensors emerge as pixels in an image when their data is translated into color values. See below an image that shows a mobile application overview.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: lit5,\n                alt: \"poster gif\",\n                className: \"vis-img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 17\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 24\n              }, this), \"Authors argue that AR is an ideal way to present such context related visualizations since it eliminates the focus switching between the visualization domain (image) and problem domain (real world). The sensors measure the relative humidity (RH) at the location of the sensor, providing with data from a discrete set of measure points in 3D. The values between the measure points are interpolated creating a continuous visualization which provides the user an overview of the humidity values as well as their distribution. The mobile phone application contains a visualization engine and a communication layer. The interpolation is performed in real time and every time a new sensor value is retrieved from the sensor network the visualization is updated. Two visualization options are implemented, one fully continuous, see Figure below, while the other is composed of small quadratic units, separated using full transparency. Authors believe that the user experiences a better sense of orientation when less background information is covered by the visualization.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"full-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Sapan Tanted, Anshul Agarwal, Shinjan Mitra, Chaitra Bahuman, and Krithi Ramamritham. 2020. Database and Caching Support for Adaptive Visualization of Large Sensor Data.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this), ' ', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this), \"In\", ' ', /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"Proceedings of the 7th ACM IKDD CoDS and 25th COMAD( CoDS COMAD 2020\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this), \"). Association for Computing Machinery, New York, NY, USA, 98\\u2013106. DOI:https://doi.org/10.1145/3371158.3371170\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Collapsible, {\n            trigger: \"Read More\",\n            className: \"full-text\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"full-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 17\n              }, this), \"The authors discuss visualization of large amounts of sensor data ( time series data) and the design, implementation and performance of an aggregation mechanism to faciliate the former task. Authors advise against displaying too many data points on a single screen as it can make the visualization slow, increase network usage and render the interface less informative and cluttered. They note that techniques like filtering, sampling and aggregation are commonly used in visualization systems to reduce the number of data points displayed. Authors state that the existing visualization systems are found to be inadequate in handling the inflow of large volumes of data. They propose a system that combines aggregation and caching techniques to implement a robust solution that helps visualization of large amounts of sensor data. Authors used Grafana as a visualization interface for their experiments since it is a widelyused open-source tool, provides data customization and allows creating dashboards with attractive visualizations. The technique proposed in this paper follows a hybrid approach where aggregation is performed on-demand, and aggregation of future requests is also taken into consideration. Thus, it requires less space for storing the aggregated data, with minimal delays experienced by users. The proposed approach is independent of the visualization tool and databases and integrates well with existing systems. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: lit1a,\n                alt: \"poster gif\",\n                className: \"vis-img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 17\n              }, this), \"One sample visualization from the project is the comparison between the power consumption of two labs - as visualizing raw data for one year is not possible, the system aggregates and visualizes the data as shown in Figure 5, which shows the power consumption of appliances (lights and fans) of two labs (lab1 - green, lab2 - orange) in the building for a period of one month. The user can zoom in to the desired section to view lower granularity data, based on the visual inspection of this graph. The visualization interface enables a smooth transition between granularities to provide rich user experience as shown in Figure 6.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: granular,\n                alt: \"poster gif\",\n                className: \"vis-img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Collapsible, {\n            trigger: \"View more Data Visualization Research paper reviews \",\n            className: \"full-text\",\n            children: [' ', /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"full-text\",\n                children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Ivan Logre, S\\xE9bastien Mosser, and Michel Riveill. 2015. Composition challenges for sensor data visualization.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 19\n                }, this), \"In\", ' ', /*#__PURE__*/_jsxDEV(\"i\", {\n                  children: \"Companion Proceedings of the 14th International Conference on Modularity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 19\n                }, this), ' ', \"(\", /*#__PURE__*/_jsxDEV(\"i\", {\n                  children: \"MODULARITY Companion 2015\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 20\n                }, this), \"). Association for Computing Machinery, New York, NY, USA, 25\\u201326. DOI:https://doi.org/10.1145/2735386.2735927\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Collapsible, {\n                trigger: \"Read More\",\n                className: \"full-text\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"full-text\",\n                  children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 388,\n                    columnNumber: 21\n                  }, this), \"The paper discusses the visualization dashboards and argues that the technologies that are used to design and implement them are poor from the software engineering point of view. This paper highlights how this domain could benefit from leveraging separation of concerns and software composition paradigms to support dashboard design. In particular, the authors argue that unfortunately, the tools available to design and implement such dashboards are holistic and do not take into account the inherent modularity of this domain. Authors mention that the design and implementation of a visualization dashboard involves three roles: 1. a Requirement Engineer (RE); 2. a Data Manager (DM); 3. a Dashboard Designer (DD). \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 401,\n                    columnNumber: 46\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 402,\n                    columnNumber: 21\n                  }, this), \"According to the authors, to implement a given dashboard, one can usually use visualization widget libraries, either professional solutions such as HighChart1 and AmChart2 or community-based libraries such as D3.JS3 . Then, one will add HTML5/CSS code to structure the result. However, those widgets do not allow their integration with a lot of data format, since the development effort is put on the interaction aspect instead of the interoperability. In addition, the huge amount of available widgets (e.g., D3.js offers 235 widgets on January 2015) increase the difficulty to select a suitable visualization. There is a lack of effort in the categorization of those new visualization capabilities. According to the authors, these last two points strengthen the difficulty to cooperate with other domains, considering the gap between the conceptual role of the RE and the implementation role of the DD, and because of the incompatible constraints imposed by the chosen libraries on data format then reduce reusability. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 420,\n                    columnNumber: 61\n                  }, this), \"This paper does not aim to describe a solution, but instead focuses on the challenges triggered by the design of visualization dashboards, and align them with modular paradigms such as separation of concerns and software composition.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 426,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 427,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: granular,\n                    alt: \"poster gif\",\n                    className: \"vis-img\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 428,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"full-text\",\n                children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Felix G. Hamza-Lup, Ionut E. Iacob, and Sushmita Khan. 2019. Web-enabled Intelligent System for Continuous Sensor Data Processing and Visualization.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 19\n                }, this), \"In\", ' ', /*#__PURE__*/_jsxDEV(\"i\", {\n                  children: \"The 24th International Conference on 3D Web Technology\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 19\n                }, this), ' ', \"(\", /*#__PURE__*/_jsxDEV(\"i\", {\n                  children: \"Web3D '19\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 446,\n                  columnNumber: 20\n                }, this), \"). Association for Computing Machinery, New York, NY, USA, 1\\u20137. DOI:https://doi.org/10.1145/3329714.3338127\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Collapsible, {\n                trigger: \"Read More\",\n                className: \"full-text\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"full-text\",\n                  children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 452,\n                    columnNumber: 21\n                  }, this), \"The authors focus on real-time data processing and 3D visualization in web-based user interfaces that facilitate spatial information understanding and sharing. In their research, they provide a prototype system for near real-time, continuous X3D-based visualization of processed sensor data for two significant applications: thermal monitoring for residential/commercial buildings and nitrogen cycle monitoring in water beds for aquaponics systems. The data processing is a three steps process: (i) collect real-time data from sensors, (ii) process the data, and (iii) visualize the information as a spatio-temporal matrix.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 464,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 465,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: lit2a,\n                    alt: \"poster gif\",\n                    className: \"vis-img\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 466,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"full-text\",\n                children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Hironobu Takagi, Chieko Asakawa, Kentarou Fukuda, and Junji Maeda. 2003. Accessibility designer: visualizing usability for the blind.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 19\n                }, this), \"In\", ' ', /*#__PURE__*/_jsxDEV(\"i\", {\n                  children: \"Proceedings of the 6th international ACM SIGACCESS conference on Computers and accessibility\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 19\n                }, this), ' ', \"(\", /*#__PURE__*/_jsxDEV(\"i\", {\n                  children: \"Assets '04\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 485,\n                  columnNumber: 20\n                }, this), \"). Association for Computing Machinery, New York, NY, USA, 177\\u2013184. DOI:https://doi.org/10.1145/1028630.1028662\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Collapsible, {\n                trigger: \"Read More\",\n                className: \"full-text\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"full-text\",\n                  children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 491,\n                    columnNumber: 21\n                  }, this), \"The authors develop Accessibility Designer (aDesigner), which has capabilities to visualize blind users' usability by using colors and gradations. The visualization function allows Web designers to grasp the weak points in their pages, and to recognize how accessible or inaccessible their pages are at a glance. This paper provides an extensive literature review and describes an approach to visualize blind users' usability followed by an overview of Accessibility Designer and also report on the evaluations of real Web sites using Accessibility Designer.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"full-text\",\n                children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 508,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: [' ', \"Arne Br\\xF6ring, David Vial, and Thorsten Reitz. 2014. Processing real-time sensor data streams for 3D web visualization.\", ' ']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 509,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 515,\n                  columnNumber: 19\n                }, this), \"In\", ' ', /*#__PURE__*/_jsxDEV(\"i\", {\n                  children: \"Proceedings of the 5th ACM SIGSPATIAL International Workshop on GeoStreaming (IWGS '14\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 517,\n                  columnNumber: 19\n                }, this), \"). Association for Computing Machinery, New York, NY, USA, 72\\u201380. DOI:https://doi.org/10.1145/2676552.2676556\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Collapsible, {\n                trigger: \"Read More\",\n                className: \"full-text\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"full-text\",\n                  children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 526,\n                    columnNumber: 21\n                  }, this), \"The data streams produced by sensors often update with high frequencies, resulting in large data volumes. Being able to analyze those real-time sensor data streams requires efficient visualization techniques. The authors explore how 3D visualizations can be used to extend the available information space. More specifically, they present an approach for processing real-time sensor data streams to enable scalable Web-based 3D visualizations. Based on an event-driven architecture, the key contribution is the presentation of three processing patterns to optimize transmission of sensor data streams to 3D Web clients.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 525,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"full-text\",\n                children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 544,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: [\"Optional, non-academic source: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 546,\n                    columnNumber: 52\n                  }, this), \"Miller, Inclusive Design: How to Build Accessible Data Visualization | Betterment: 2020. https://www.betterment.com/resources/accessible-data-visualization/. Accessed: 2021.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 545,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 552,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Collapsible, {\n                trigger: \"Read More\",\n                className: \"full-text\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"full-text\",\n                  children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 556,\n                    columnNumber: 21\n                  }, this), \"The author discusses common accessibility rules that developers should consider when designing a web application. Although this article is non-academic, it references official World Wide Web Consortium guidelines on web accessibility rules.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 555,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"gif-text\",\n          children: \"Sensor Data Visualization Challenges \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"full-text\",\n          children: [\"Visualizing large amounts of temporal data requires balancing the goals of achieving high performance and interactivity. Given that Air Quality and Noise level data collected at SONYC is longitudinal (data is collected sequentially over time), aggregate visualization requires plotting multiple data points that reference a value at a certain day, hour and in some cases, minute.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 20\n          }, this), \"However, displaying too many data points on a single screen can make the visualization slow, increase network usage and render the interface less informative and cluttered.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 20\n          }, this), \"One solution lies in intelligently aggregating the data to higher granularities, so that the number of data points to be visualized is reduced and is easier for the user to interpret. The figure below\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://dl.acm.org/doi/10.1145/3371158.3371170\",\n            children: \"(Tanted et al., 2020)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 13\n          }, this), ' ', \"illustrates an example of data visualization at different levels of granularity (minute, hour, day)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: granular,\n            alt: \"poster gif\",\n            className: \"vis-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 20\n          }, this), \"For the future research, data processing techniques like filtering, sampling and aggregation can be used in visualization systems to reduce the number of data points displayed. For the current\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/visualizer\",\n            children: \"Visualizer Interface\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 13\n          }, this), \" we have visualized samples of the Noise and Air Quality data collected by the sensors for the SONYC project.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"full-text\",\n          children: \"- - -\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"full-text\",\n          children: [\"Moreover, visualizing the longitudinal data such as Air Quality or Noise level data is challenging due to continuity of the data: 24 hours form a continuous cycle as the 'day' has no precise start and end. A normal day ends at 11.59pm, but this line is subjective: if we want to show how data changes based on human activity during the night vs day (relevant to Noise Level analysis), the 'end' and 'start' can be set differently. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 13\n          }, this), \"For example, some line or bar charts that deal with the 24-hour cycle set 'start' and 'end' at 4am as, generally, at this time most people are sleeping). Picking an arbitrary time to break the data might be an additional challenge as it requires preliminary analysis and knowledge about the data and potential insights it can provide. Learn more about continuity challenge\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"http://dougmccune.com/blog/2011/04/21/visualizing-cyclical-time-hour-of-day-charts/\",\n            children: \"here.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"gif-text\",\n          children: \"Visualization Graphs and Discussion \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"full-text\",\n          children: \"We researched and selected graphs that can most effectively visualize the longitudinal sensor data (both Air Quality and Noise level data). Some of these graphs have been already created and incorporated in the Visualizer interface, while other graphs can serve as an inspiration for future researchers at the SONYC lab.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"gif-text-h5-dv\",\n          children: \"A. Line graph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"full-text\",\n          children: [' ', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 13\n          }, this), \"- The easiest way to display the longitudinal data. Line Graphs are used to display quantitative values over a continuous interval or time period. A Line Graph is most frequently used to show trends and analyse how the data has changed over time.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 13\n          }, this), \" - Typically these charts begin at a certain hour (often midnight) and show 24 unique bars or data points, ending at the same time they started. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"float-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"float-child\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"full-text\",\n              children: [\"Advantages\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 17\n              }, this), \"- Useful for representing continuous data, such as change over time \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 653,\n                columnNumber: 22\n              }, this), \"- Allows possible extrapolation of data \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 654,\n                columnNumber: 57\n              }, this), \"- Having a line constructed from multiple data points can allow you to make estimates of missing data \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 656,\n                columnNumber: 55\n              }, this), \"- Allows comparison of two or more items to see if there is any kind of connection or relationship\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"float-child\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"full-text\",\n              children: [\"Disadvantages\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 665,\n                columnNumber: 17\n              }, this), \"- Can be difficult to determine exact values at a given point of the graph \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 27\n              }, this), \"- Too many lines, or even two lines that have values that are too similar, can make comparing data difficult\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 662,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LazyImageProvider, {\n          children: /*#__PURE__*/_jsxDEV(Carousel, {\n            children: images.map((image, i) => /*#__PURE__*/_jsxDEV(LazyImage, {\n              aspectRatio: [10, 7],\n              src: image\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"gif-text-h5-dv\",\n          children: \"B. Radar chart graph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"full-text\",\n          children: [' ', \"- Each variable is provided with an axis that starts from the centre. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 21\n          }, this), \"- All axes are arranged radially, with equal distances between each other, while maintaining the same scale between all axes. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 687,\n            columnNumber: 71\n          }, this), \"- Each variable value is plotted along its individual axis and all the variables in a dataset and connected together to form a polygon.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"float-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"float-child\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"full-text\",\n              children: [\"Advantages\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 695,\n                columnNumber: 17\n              }, this), \"- Useful for seeing which variables have similar values or if there are any outliers amongst each variable. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 697,\n                columnNumber: 63\n              }, this), \"- Useful for seeing which variables are scoring high or low within a dataset, making them ideal for displaying performance.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"float-child\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"full-text\",\n              children: [\"Disadvantages\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 705,\n                columnNumber: 17\n              }, this), \"- Having multiple polygons in one Radar Chart makes it hard to read. Too many variables creates too many axes and can also make the chart hard to read. Radar Charts should be kept simple and number of variables should be limited.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 710,\n                columnNumber: 17\n              }, this), \"- Another flaw with Radar Charts is that they\\u2019re not so good for comparing values across each variable. Comparing values all on a single straight axis is much easier.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 703,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LazyImageProvider, {\n          children: /*#__PURE__*/_jsxDEV(Carousel, {\n            children: imagesRc.map((image, i) => /*#__PURE__*/_jsxDEV(LazyImage, {\n              aspectRatio: [10, 7],\n              src: image\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 721,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 719,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"gif-text-h5-dv\",\n          children: \"C. Nightingale chart graph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"full-text\",\n          children: [' ', \"- This chart was famously used by statistician and medical reformer, Florence Nightingale to communicate the avoidable deaths of soldiers during the Crimean war.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 13\n          }, this), \"- Nightingale Rose Charts are drawn on a polar coordinate grid. Each category or interval in the data is divided into equal segments on this radial chart. How far each segment extends from the centre of the polar axis depends on the value it represents.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"float-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"float-child\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"full-text\",\n              children: [\"Advantages\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 741,\n                columnNumber: 17\n              }, this), \"- Each ring from the centre of the polar grid can be used as a scale to plot the segment size and represent a higher value. Therefore, it\\u2019s important to notice with Nightingale Rose Charts that it\\u2019s the area, rather than the radius of a segment that represents its value.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 739,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 738,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"float-child\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"full-text\",\n              children: [\"Disadvantages\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 751,\n                columnNumber: 17\n              }, this), \"- The major flaw with Nightingale Rose Charts is that the outer segments are given more emphasis because of their larger area size. This disproportionately represents increases in value.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 749,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 748,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LazyImageProvider, {\n          children: /*#__PURE__*/_jsxDEV(Carousel, {\n            children: imagesNg.map((image, i) => /*#__PURE__*/_jsxDEV(LazyImage, {\n              aspectRatio: [10, 7],\n              src: image\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 762,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 760,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"gif-text-h5-dv\",\n          children: \"D. Double-time Bar chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"full-text\",\n          children: [' ', /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Why to not usual bar chart for time series? \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 770,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 20\n          }, this), \"Generally, visualization of time series data using bar charts has the following challenges: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 773,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 774,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"The break in the data between 11pm and midnight: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 775,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 776,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 777,\n            columnNumber: 13\n          }, this), \"-To summarize, the first problem has to do with being able to understand the trends that occur around midnight (where this chart breaks the data). \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 780,\n            columnNumber: 31\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 780,\n            columnNumber: 38\n          }, this), \"-This is only problematic when something interesting is happening around midnight (or whenever you choose to have your chart begin/end). \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 783,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 784,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \" The difficulty understanding the context of the time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 785,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 785,\n            columnNumber: 75\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 786,\n            columnNumber: 13\n          }, this), \"- The second point about context has to do with the fact that I don\\u2019t think about my days as starting at midnight and ending at 11:59pm. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 789,\n            columnNumber: 13\n          }, this), \"- A more accurate representation of how I think of my days is that they start sometime when I wake up, usually around 7am, and they are broken up into \\u201Cday-time\\u201D and \\u201Cnight-time\\u201D, and they end more or less when I go to sleep. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 46\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 793,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 794,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Summary: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 795,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 796,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 797,\n            columnNumber: 13\n          }, this), \"The simple bar chart doesn\\u2019t solve these problems well. It presents a hard break in the data, forcing the viewer to mentally connect the end of the chart with the beginning. And it also forces the viewer to think about the days in the context of midnight \\u2013 11pm, which is not the natural categorization system we have for the hours of the day. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 803,\n            columnNumber: 18\n          }, this), \"Therefore, for future research and development, it is suggested to use a double-time bar chart to display the longitudinal sensor data.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 768,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LazyImageProvider, {\n          children: /*#__PURE__*/_jsxDEV(Carousel, {\n            children: imagesBg.map((image, i) => /*#__PURE__*/_jsxDEV(LazyImage, {\n              aspectRatio: [10, 7],\n              src: image\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 810,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 814,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 816,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"gif-text-h5-dv\",\n          children: \"E. Bubble chart graph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 817,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"full-text\",\n          children: [' ', \"-Each point is assigned a label or category . Each plotted point then represents a third variable by the area of its circle. Colors can also be used to distinguish between categories or used to represent an additional data variable.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 824,\n            columnNumber: 13\n          }, this), \" -Time can be shown either by having it as a variable on one of the axis or by animating the data variables changing over time.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 826,\n            columnNumber: 13\n          }, this), \"-Bubble Charts are typically used to compare and show the relationships between categorised circles, by the use of positioning and proportions. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 829,\n            columnNumber: 30\n          }, this), \"- The overall picture of Bubble Charts can be used to analyse for patterns/correlations.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 818,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"float-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"float-child\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"full-text\",\n              children: [\"Advantages\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 836,\n                columnNumber: 17\n              }, this), \"-Bubble charts allowing to display three variables without using 3D graphs. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 838,\n                columnNumber: 28\n              }, this), \" -Visually, size of the bubbles makes it very easy to make relative comparisons and graph can convey the same information as a line graph\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 834,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 833,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"float-child\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"full-text\",\n              children: [\"Disadvantages\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 846,\n                columnNumber: 17\n              }, this), \"- Too many bubbles can make the chart hard to read, so Bubble Charts have a limited data size capacity.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 848,\n                columnNumber: 17\n              }, this), \"- Due to circle sizes, can be difficult to ascertain actual values; difficult to read and understand; cannot be used to display a lot of data.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 844,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 843,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 854,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LazyImageProvider, {\n          children: /*#__PURE__*/_jsxDEV(Carousel, {\n            children: imagesBcg.map((image, i) => /*#__PURE__*/_jsxDEV(LazyImage, {\n              aspectRatio: [10, 7],\n              src: image\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 858,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 856,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 855,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"gif-text\",\n          children: \"Web Accessibility Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 864,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"full-text\",\n          children: \"Another part of the Data Visualization Research involved researching Web Accessibility guidelines for web-based visualizations. This step is required for ensuring that\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 865,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 863,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 871,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = DataVisualization;\nexport default DataVisualization;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataVisualization\");","map":{"version":3,"sources":["/Users/almazhan/Desktop/sonyc-app-ugsrp/src/pages/DataVisualization.js"],"names":["React","Header","Footer","lit1","lit2","lit3","bch1","bch2","bch3","lit4","lit5","lit1a","lit2a","lc1","lc2","lc3","ng1","ng2","ng3","rc1","rc2","rc3","rc4","bc1","bc2","bc3","ReactDOM","Carousel","LazyImageProvider","LazyImage","granular","Collapsible","DataVisualization","images","imagesRc","imagesNg","imagesBg","imagesBcg","map","image","i"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Header from '../components/Header'\nimport Footer from '../components/Footer'\nimport lit1 from '../images/lit1.png'\nimport lit2 from '../images/lit2.png'\nimport lit3 from '../images/lit3.png'\nimport bch1 from '../images/bch1.png'\nimport bch2 from '../images/bch2.png'\nimport bch3 from '../images/bch3.png'\nimport lit4 from '../images/lit4.png'\nimport lit5 from '../images/lit5.png'\nimport lit1a from '../images/lit1a.png'\nimport lit2a from '../images/lit2a.png'\nimport lc1 from '../images/lc1.png'\nimport lc2 from '../images/lc2.png'\nimport lc3 from '../images/lc3.png'\nimport ng1 from '../images/ng1.png'\nimport ng2 from '../images/ng2.png'\nimport ng3 from '../images/ng3.png'\nimport rc1 from '../images/rc1.png'\nimport rc2 from '../images/rc2.png'\nimport rc3 from '../images/rc3.png'\nimport rc4 from '../images/rc4.png'\nimport bc1 from '../images/bc1.png'\nimport bc2 from '../images/bc2.png'\nimport bc3 from '../images/bc3.png'\nimport ReactDOM from 'react-dom'\nimport Carousel from '../components/Carousel'\nimport { LazyImageProvider } from '../components/LazyImageContext'\nimport LazyImage from '../components/LazyImage'\n//import './index.css'\nimport granular from '../images/granular.png'\nimport './DataVisualization.css'\nimport Collapsible from 'react-collapsible'\n\nfunction DataVisualization() {\n  const images = [lc1, lc2, lc3]\n  const imagesRc = [rc1, rc2, rc3, rc4]\n  const imagesNg = [ng1, ng2, ng3]\n  const imagesBg = [bc1, bc2, bc3]\n  const imagesBcg = [bch1, bch2, bch3]\n\n  return (\n    <>\n      <Header />\n      <div className=\"home\">\n        <h2 className=\"header-text\">Data Visualization</h2>\n        <div className=\"block\">\n          <p className=\"full-text\">\n            Sensors are used to measure Air and Noise Pollution levels and\n            visualizing this data is the first and crucial step in interpreting\n            and making decisions about the data. We conducted research to\n            evaluate and review state-of-the-art approaches towards visualizing\n            the Noise and Air sensor data in web and mobile interface, current\n            challenges in visualizing the sensor data.\n          </p>\n          <br />\n        </div>\n        <div className=\"block\">\n          <h4 className=\"gif-text\">Data Visualization Research Review</h4>\n\n          <div>\n            <p className=\"full-text\">\n              <b>\n                {' '}\n                Guess the Data: Data Work to Understand How People Make Sense of\n                and Use Simple Sensor Data from Homes .Albrecht Kurze, Andreas\n                Bischof, Sören Totzauer, Michael Storz, Maximilian Eibl, Margot\n                Brereton, and Arne Berger. 2020.\n              </b>\n              <i>\n                Proceedings of the 2020 CHI Conference on Human Factors in\n                Computing Systems\n              </i>\n              . Association for Computing Machinery, New York, NY, USA, 1–12.\n              DOI:https://doi.org/10.1145/3313831.3376273\n            </p>\n            <Collapsible trigger=\"Read More\" className=\"full-text\">\n              <p className=\"full-text\">\n                The authors investigate human sensemaking of such sensor data\n                can reveal domestic activities and to achieve that task, develop\n                and field-test the Guess the data method,which enabled people to\n                use and make sense of live data from their homes and to\n                collectively interpret and reflect on anonymized data from the\n                homes in the study. The authors decided to use simple line\n                graphs as data visualizations for temperature, light level,\n                humidity, barometric pressure and movement (accelerometer\n                values). They wanted to undertake very little pre-processing,\n                presenting close to ‘raw’ data, to prevent interpretation bias.\n                Such simple time series graphs are comparable to those used in\n                other cited studies. The findings show how participants\n                reconstruct behavior, both individually and collectively, expose\n                the sensitive personal data of others, and use sensor data as\n                evidence and for lateral surveillance within the household.\n                <br />\n                Visualized sensor data used as evidence and proof: Participants\n                used visualized data to confirm their assumptions about other\n                residents’ behavior, not only retrospectively during discussions\n                but also pro-actively during data collection when they had\n                access to it. For example, a participant corrected the partner’s\n                careless behavior regarding the light in the hallway (figure 3),\n                which he often forgot to turn off. She confronted him with the\n                visualization of the light sensor data, and “he was a little bit\n                shocked” (II.A)\n              </p>\n              <img src={lit1} alt=\"poster gif\" className=\"vis-img\" />\n            </Collapsible>\n            <br />\n          </div>\n\n          <div>\n            <p className=\"full-text\">\n              <br />\n              <b>\n                Nicolas Maisonneuve, Matthias Stevens, Maria E. Niessen, Peter\n                Hanappe, and Luc Steels. 2009. Citizen noise pollution\n                monitoring.\n              </b>\n              In{' '}\n              <i>\n                Proceedings of the 10th Annual International Conference on\n                Digital Government Research: Social Networks: Making Connections\n                between Citizens, Data and Government\n              </i>{' '}\n              (<i>dg.o '09</i>). Digital Government Society of North America,\n              96–103. https://dl.acm.org/doi/10.5555/1556176.1556198\n            </p>\n            <Collapsible trigger=\"Read More\" className=\"full-text\">\n              <p className=\"full-text\">\n                In this paper, authors present a new approach to monitor noise\n                pollution involving citizens who can measure their personal\n                exposure to noise in their everyday environment by using\n                GPS-equipped mobile phones as noise sensors. The geo-localised\n                measures and user-generated meta-data can be automatically sent\n                and shared online with the public to contribute to the\n                collective noise mapping of cities. The prototype called Noise\n                Tube can be found online. This application collects local\n                information from different sensors (noise level, GPS\n                coordinates, time, user input) and sends them to the NoiseTube\n                server which visualizes the noise level data. The server\n                centralises and processes the data sent by the phones.\n                <br />\n                <br />\n                The mobile application contains a real-time signal processing\n                algorithm which measures the loudness level of the microphone\n                recording the environmental sound (at 22500 Hz, 16 bits) over 1\n                second at a chosen interval. On top of the sensing of the\n                loudness a real time visualization is displayed on the phone\n                with the decibels. To add meaning to this value it is associated\n                with a colour that represents the health risk of the current\n                exposure level: less than 70: green (no risk); between 70 and\n                80: yellow (be careful); more than 80: red (risky). See figure 2\n                below.\n                <br />\n                <br />\n                <img src={lit2} alt=\"poster gif\" className=\"vis-img\" />\n                <br />\n                In addition to measured loudness, the app allows to record the\n                source or context of noise, which is not always available but\n                remains important. Especially because the appreciation of sound\n                and loudness is a subjective matter – i.e. the perceived\n                annoyance (or pleasure) does not always correlate with its\n                loudness (see 6.2). Context is recorded through environmental\n                tagging (source of a noise e.g.: cars, aircraft, neighbours and\n                an annoyance rating/tag) and geo-tagging (gps positioning or\n                place tags (such as “home”, “work”, the name of the subway\n                station, ...) Geo-tagging feature we can reconstruct the\n                geo-coordinates afterwards notably for indoor locations (cf.\n                subway noise map in figure 3).\n                <br />\n                <img src={lit3} alt=\"poster gif\" className=\"vis-img\" />\n                <br />\n                <br />\n                Visualizing Noise Maps. Once the measured data is sent to the\n                server, any user can see his own contributions or exposures by\n                going to the NoiseTube website and visualizing them on a map\n                thanks to Google Earth. The collective noise map is also\n                publicly available constructed by aggregating all the shared\n                participants. Each map can show a layer of participants to add\n                context and meaning to the loudness data. The authors also allow\n                users embed this as a web widget into their personal web pages\n                and provide publicly accessible web API to give full access to\n                third parties such scientists or developers can use individual\n                or collective exposure data to create web mash-ups or analyse\n                data for scientific purposes.\n              </p>\n            </Collapsible>\n            <br />\n          </div>\n          <div>\n            <p className=\"full-text\">\n              <br />\n              <b>\n                Silvia Santini, Benedikt Ostermaier, and Andrea Vitaletti. 2008.\n                First experiences using wireless sensor networks for noise\n                pollution monitoring.{' '}\n              </b>\n              In{' '}\n              <i>\n                Proceedings of the workshop on Real-world wireless sensor\n                networks\n              </i>{' '}\n              (<i>REALWSN '08</i>). Association for Computing Machinery, New\n              York, NY, USA, 61–65. DOI:https://doi.org/10.1145/1435473.1435490\n            </p>\n            <Collapsible trigger=\"Read More\" className=\"full-text\">\n              <p className=\"full-text\">\n                The authors focus on the assessment of environmental noise\n                pollution in urban areas and provide a feasibility analysis of\n                wireless sensor networks. They also present a prototype for the\n                collection and logging of noise pollution data based on the\n                Tmote invent prototyping platform, using which they performed\n                indoor and outdoor noise pollution measurements. They also\n                present tinyLAB, a Matlab-based tool developed in the context of\n                this work, which enables real-time acquisition, processing and\n                visualization of data collected in wireless sensor networks.\n                Authors mention that prototyping wireless sensor network\n                applications often requires visualizing the sensor data to\n                quickly identify any malfunctioning. For example, figure 1 shows\n                the responses to these acoustic events of four different nodes,\n                clearly pointing out a misalignment in the measured equivalent\n                noise levels. <br />\n                <br />\n                <img src={lit4} alt=\"poster gif\" className=\"vis-img\" />\n                <br />\n                <br />\n                Additionally, authors mention that current tools often do not\n                provide satisfactory data processing and visualization features\n                and propose using Matlab as it serves scientists in managing,\n                processing and visualizing their data and appears therefore\n                particularly well-suited to be used in the context of wireless\n                sensor networks. Authors develop tinyLAB, a simple framework\n                that allows to receive and send messages from and to a sensor\n                network and to visualize and process data as it comes from the\n                network. tinyLAB is implemented relying solely on the Matlab\n                software suite and offers a simple API to receive and send data.\n              </p>\n            </Collapsible>\n            <br />\n          </div>\n          <div>\n            <p className=\"full-text\">\n              <br />\n              <b>\n                Ann-sofie Gunnarsson, Malinda Rauhala, Anders Henrysson, and\n                Anders Ynnerman. 2006. Visualization of sensor data using mobile\n                phone augmented reality.{' '}\n              </b>\n              In{' '}\n              <i>\n                Proceedings of the 5th IEEE and ACM International Symposium on\n                Mixed and Augmented Reality\n              </i>{' '}\n              (<i>ISMAR '06</i>). IEEE Computer Society, USA, 233–234.\n              DOI:https://doi.org/10.1109/ISMAR.2006.297820\n            </p>\n            <Collapsible trigger=\"Read More\" className=\"full-text\">\n              <p className=\"full-text\">\n                The authors developed a prototype system for visual inspection\n                of hidden structures using a mobile phone wireless ZigBee sensor\n                network. Data collected from an embedded wireless sensor matrix\n                is used to synthesize AR visualizations in real-time. The AR\n                visualization is providing the user with an instant insight\n                concerning the status of the element being augmented. The\n                authors arrange sensors in a grid (e.g. a matrix), which allows\n                to take an approach where individual sensors emerge as pixels in\n                an image when their data is translated into color values. See\n                below an image that shows a mobile application overview.\n                <br />\n                <br />\n                <img src={lit5} alt=\"poster gif\" className=\"vis-img\" />\n                <br /> <br />\n                Authors argue that AR is an ideal way to present such context\n                related visualizations since it eliminates the focus switching\n                between the visualization domain (image) and problem domain\n                (real world). The sensors measure the relative humidity (RH) at\n                the location of the sensor, providing with data from a discrete\n                set of measure points in 3D. The values between the measure\n                points are interpolated creating a continuous visualization\n                which provides the user an overview of the humidity values as\n                well as their distribution. The mobile phone application\n                contains a visualization engine and a communication layer. The\n                interpolation is performed in real time and every time a new\n                sensor value is retrieved from the sensor network the\n                visualization is updated. Two visualization options are\n                implemented, one fully continuous, see Figure below, while the\n                other is composed of small quadratic units, separated using full\n                transparency. Authors believe that the user experiences a better\n                sense of orientation when less background information is covered\n                by the visualization.\n                <br />\n              </p>\n            </Collapsible>\n            <br />\n          </div>\n\n          <div>\n            <p className=\"full-text\">\n              <br />\n              <b>\n                Sapan Tanted, Anshul Agarwal, Shinjan Mitra, Chaitra Bahuman,\n                and Krithi Ramamritham. 2020. Database and Caching Support for\n                Adaptive Visualization of Large Sensor Data.\n              </b>{' '}\n              <br />\n              In{' '}\n              <i>\n                Proceedings of the 7th ACM IKDD CoDS and 25th COMAD( CoDS COMAD\n                2020\n              </i>\n              ). Association for Computing Machinery, New York, NY, USA, 98–106.\n              DOI:https://doi.org/10.1145/3371158.3371170\n            </p>\n            <Collapsible trigger=\"Read More\" className=\"full-text\">\n              <p className=\"full-text\">\n                <br />\n                The authors discuss visualization of large amounts of sensor\n                data ( time series data) and the design, implementation and\n                performance of an aggregation mechanism to faciliate the former\n                task. Authors advise against displaying too many data points on\n                a single screen as it can make the visualization slow, increase\n                network usage and render the interface less informative and\n                cluttered. They note that techniques like filtering, sampling\n                and aggregation are commonly used in visualization systems to\n                reduce the number of data points displayed. Authors state that\n                the existing visualization systems are found to be inadequate in\n                handling the inflow of large volumes of data. They propose a\n                system that combines aggregation and caching techniques to\n                implement a robust solution that helps visualization of large\n                amounts of sensor data. Authors used Grafana as a visualization\n                interface for their experiments since it is a widelyused\n                open-source tool, provides data customization and allows\n                creating dashboards with attractive visualizations. The\n                technique proposed in this paper follows a hybrid approach where\n                aggregation is performed on-demand, and aggregation of future\n                requests is also taken into consideration. Thus, it requires\n                less space for storing the aggregated data, with minimal delays\n                experienced by users. The proposed approach is independent of\n                the visualization tool and databases and integrates well with\n                existing systems. <br />\n                <br />\n                <img src={lit1a} alt=\"poster gif\" className=\"vis-img\" />\n                <br />\n                <br />\n                One sample visualization from the project is the comparison\n                between the power consumption of two labs - as visualizing raw\n                data for one year is not possible, the system aggregates and\n                visualizes the data as shown in Figure 5, which shows the power\n                consumption of appliances (lights and fans) of two labs (lab1 -\n                green, lab2 - orange) in the building for a period of one month.\n                The user can zoom in to the desired section to view lower\n                granularity data, based on the visual inspection of this graph.\n                The visualization interface enables a smooth transition between\n                granularities to provide rich user experience as shown in Figure\n                6.\n                <br />\n                <br />\n                <img src={granular} alt=\"poster gif\" className=\"vis-img\" />\n              </p>\n            </Collapsible>\n            <br />\n          </div>\n          <div>\n            <Collapsible\n              trigger=\"View more Data Visualization Research paper reviews \"\n              className=\"full-text\"\n            >\n              {' '}\n              <div>\n                <p className=\"full-text\">\n                  <br />\n                  <b>\n                    Ivan Logre, Sébastien Mosser, and Michel Riveill. 2015.\n                    Composition challenges for sensor data visualization.\n                  </b>\n                  <br />\n                  In{' '}\n                  <i>\n                    Companion Proceedings of the 14th International Conference\n                    on Modularity\n                  </i>{' '}\n                  (<i>MODULARITY Companion 2015</i>). Association for Computing\n                  Machinery, New York, NY, USA, 25–26.\n                  DOI:https://doi.org/10.1145/2735386.2735927\n                </p>\n                <Collapsible trigger=\"Read More\" className=\"full-text\">\n                  <p className=\"full-text\">\n                    <br />\n                    The paper discusses the visualization dashboards and argues\n                    that the technologies that are used to design and implement\n                    them are poor from the software engineering point of view.\n                    This paper highlights how this domain could benefit from\n                    leveraging separation of concerns and software composition\n                    paradigms to support dashboard design. In particular, the\n                    authors argue that unfortunately, the tools available to\n                    design and implement such dashboards are holistic and do not\n                    take into account the inherent modularity of this domain.\n                    Authors mention that the design and implementation of a\n                    visualization dashboard involves three roles: 1. a\n                    Requirement Engineer (RE); 2. a Data Manager (DM); 3. a\n                    Dashboard Designer (DD). <br />\n                    <br />\n                    According to the authors, to implement a given dashboard,\n                    one can usually use visualization widget libraries, either\n                    professional solutions such as HighChart1 and AmChart2 or\n                    community-based libraries such as D3.JS3 . Then, one will\n                    add HTML5/CSS code to structure the result. However, those\n                    widgets do not allow their integration with a lot of data\n                    format, since the development effort is put on the\n                    interaction aspect instead of the interoperability. In\n                    addition, the huge amount of available widgets (e.g., D3.js\n                    offers 235 widgets on January 2015) increase the difficulty\n                    to select a suitable visualization. There is a lack of\n                    effort in the categorization of those new visualization\n                    capabilities. According to the authors, these last two\n                    points strengthen the difficulty to cooperate with other\n                    domains, considering the gap between the conceptual role of\n                    the RE and the implementation role of the DD, and because of\n                    the incompatible constraints imposed by the chosen libraries\n                    on data format then reduce reusability. <br />\n                    This paper does not aim to describe a solution, but instead\n                    focuses on the challenges triggered by the design of\n                    visualization dashboards, and align them with modular\n                    paradigms such as separation of concerns and software\n                    composition.\n                    <br />\n                    <br />\n                    <img src={granular} alt=\"poster gif\" className=\"vis-img\" />\n                  </p>\n                </Collapsible>\n                <br />\n              </div>\n              <div>\n                <p className=\"full-text\">\n                  <br />\n                  <b>\n                    Felix G. Hamza-Lup, Ionut E. Iacob, and Sushmita Khan. 2019.\n                    Web-enabled Intelligent System for Continuous Sensor Data\n                    Processing and Visualization.\n                  </b>\n                  <br />\n                  In{' '}\n                  <i>\n                    The 24th International Conference on 3D Web Technology\n                  </i>{' '}\n                  (<i>Web3D '19</i>). Association for Computing Machinery, New\n                  York, NY, USA, 1–7.\n                  DOI:https://doi.org/10.1145/3329714.3338127\n                </p>\n                <Collapsible trigger=\"Read More\" className=\"full-text\">\n                  <p className=\"full-text\">\n                    <br />\n                    The authors focus on real-time data processing and 3D\n                    visualization in web-based user interfaces that facilitate\n                    spatial information understanding and sharing. In their\n                    research, they provide a prototype system for near\n                    real-time, continuous X3D-based visualization of processed\n                    sensor data for two significant applications: thermal\n                    monitoring for residential/commercial buildings and nitrogen\n                    cycle monitoring in water beds for aquaponics systems. The\n                    data processing is a three steps process: (i) collect\n                    real-time data from sensors, (ii) process the data, and\n                    (iii) visualize the information as a spatio-temporal matrix.\n                    <br />\n                    <br />\n                    <img src={lit2a} alt=\"poster gif\" className=\"vis-img\" />\n                  </p>\n                </Collapsible>\n                <br />\n              </div>\n              <div>\n                <p className=\"full-text\">\n                  <br />\n                  <b>\n                    Hironobu Takagi, Chieko Asakawa, Kentarou Fukuda, and Junji\n                    Maeda. 2003. Accessibility designer: visualizing usability\n                    for the blind.\n                  </b>\n                  <br />\n                  In{' '}\n                  <i>\n                    Proceedings of the 6th international ACM SIGACCESS\n                    conference on Computers and accessibility\n                  </i>{' '}\n                  (<i>Assets '04</i>). Association for Computing Machinery, New\n                  York, NY, USA, 177–184.\n                  DOI:https://doi.org/10.1145/1028630.1028662\n                </p>\n                <Collapsible trigger=\"Read More\" className=\"full-text\">\n                  <p className=\"full-text\">\n                    <br />\n                    The authors develop Accessibility Designer (aDesigner),\n                    which has capabilities to visualize blind users' usability\n                    by using colors and gradations. The visualization function\n                    allows Web designers to grasp the weak points in their\n                    pages, and to recognize how accessible or inaccessible their\n                    pages are at a glance. This paper provides an extensive\n                    literature review and describes an approach to visualize\n                    blind users' usability followed by an overview of\n                    Accessibility Designer and also report on the evaluations of\n                    real Web sites using Accessibility Designer.\n                  </p>\n                </Collapsible>\n                <br />\n              </div>\n              <div>\n                <p className=\"full-text\">\n                  <br />\n                  <b>\n                    {' '}\n                    Arne Bröring, David Vial, and Thorsten Reitz. 2014.\n                    Processing real-time sensor data streams for 3D web\n                    visualization.{' '}\n                  </b>\n                  <br />\n                  In{' '}\n                  <i>\n                    Proceedings of the 5th ACM SIGSPATIAL International Workshop\n                    on GeoStreaming (IWGS '14\n                  </i>\n                  ). Association for Computing Machinery, New York, NY, USA,\n                  72–80. DOI:https://doi.org/10.1145/2676552.2676556\n                </p>\n                <Collapsible trigger=\"Read More\" className=\"full-text\">\n                  <p className=\"full-text\">\n                    <br />\n                    The data streams produced by sensors often update with high\n                    frequencies, resulting in large data volumes. Being able to\n                    analyze those real-time sensor data streams requires\n                    efficient visualization techniques. The authors explore how\n                    3D visualizations can be used to extend the available\n                    information space. More specifically, they present an\n                    approach for processing real-time sensor data streams to\n                    enable scalable Web-based 3D visualizations. Based on an\n                    event-driven architecture, the key contribution is the\n                    presentation of three processing patterns to optimize\n                    transmission of sensor data streams to 3D Web clients.\n                  </p>\n                </Collapsible>\n                <br />\n              </div>\n              <div>\n                <p className=\"full-text\">\n                  <br />\n                  <b>\n                    Optional, non-academic source: <br />\n                    Miller, Inclusive Design: How to Build Accessible Data\n                    Visualization | Betterment: 2020.\n                    https://www.betterment.com/resources/accessible-data-visualization/.\n                    Accessed: 2021.\n                  </b>\n                  <br />\n                </p>\n                <Collapsible trigger=\"Read More\" className=\"full-text\">\n                  <p className=\"full-text\">\n                    <br />\n                    The author discusses common accessibility rules that\n                    developers should consider when designing a web application.\n                    Although this article is non-academic, it references\n                    official World Wide Web Consortium guidelines on web\n                    accessibility rules.\n                  </p>\n                </Collapsible>\n                <br />\n              </div>\n            </Collapsible>\n          </div>\n        </div>\n        <br /> <br />\n        <div className=\"block\">\n          <h4 className=\"gif-text\">Sensor Data Visualization Challenges </h4>\n          <p className=\"full-text\">\n            Visualizing large amounts of temporal data requires balancing the\n            goals of achieving high performance and interactivity. Given that\n            Air Quality and Noise level data collected at SONYC is longitudinal\n            (data is collected sequentially over time), aggregate visualization\n            requires plotting multiple data points that reference a value at a\n            certain day, hour and in some cases, minute.\n            <br /> <br />\n            However, displaying too many data points on a single screen can make\n            the visualization slow, increase network usage and render the\n            interface less informative and cluttered.\n            <br /> <br />\n            One solution lies in intelligently aggregating the data to higher\n            granularities, so that the number of data points to be visualized is\n            reduced and is easier for the user to interpret. The figure below{' '}\n            <a href=\"https://dl.acm.org/doi/10.1145/3371158.3371170\">\n              (Tanted et al., 2020)\n            </a>{' '}\n            illustrates an example of data visualization at different levels of\n            granularity (minute, hour, day)\n            <br /> <br />\n            <img src={granular} alt=\"poster gif\" className=\"vis-img\" />\n            <br /> <br />\n            For the future research, data processing techniques like filtering,\n            sampling and aggregation can be used in visualization systems to\n            reduce the number of data points displayed. For the current{' '}\n            <a href=\"/visualizer\">Visualizer Interface</a>\n            <br /> we have visualized samples of the Noise and Air Quality data\n            collected by the sensors for the SONYC project.\n          </p>\n          <p className=\"full-text\">- - -</p>\n          <p className=\"full-text\">\n            Moreover, visualizing the longitudinal data such as Air Quality or\n            Noise level data is challenging due to continuity of the data: 24\n            hours form a continuous cycle as the 'day' has no precise start and\n            end. A normal day ends at 11.59pm, but this line is subjective: if\n            we want to show how data changes based on human activity during the\n            night vs day (relevant to Noise Level analysis), the 'end' and\n            'start' can be set differently. <br />\n            <br />\n            For example, some line or bar charts that deal with the 24-hour\n            cycle set 'start' and 'end' at 4am as, generally, at this time most\n            people are sleeping). Picking an arbitrary time to break the data\n            might be an additional challenge as it requires preliminary analysis\n            and knowledge about the data and potential insights it can provide.\n            Learn more about continuity challenge{' '}\n            <a href=\"http://dougmccune.com/blog/2011/04/21/visualizing-cyclical-time-hour-of-day-charts/\">\n              here.\n            </a>\n          </p>\n\n          <br />\n        </div>\n        <br /> <br />\n        <div className=\"block\">\n          <h4 className=\"gif-text\">Visualization Graphs and Discussion </h4>\n          <p className=\"full-text\">\n            We researched and selected graphs that can most effectively\n            visualize the longitudinal sensor data (both Air Quality and Noise\n            level data). Some of these graphs have been already created and\n            incorporated in the Visualizer interface, while other graphs can\n            serve as an inspiration for future researchers at the SONYC lab.\n          </p>\n          <h5 className=\"gif-text-h5-dv\">A. Line graph</h5>\n          <p className=\"full-text\">\n            {' '}\n            <br />- The easiest way to display the longitudinal data. Line\n            Graphs are used to display quantitative values over a continuous\n            interval or time period. A Line Graph is most frequently used to\n            show trends and analyse how the data has changed over time.\n            <br /> - Typically these charts begin at a certain hour (often\n            midnight) and show 24 unique bars or data points, ending at the same\n            time they started. <br />\n            <br />\n          </p>\n          <div className=\"float-container\">\n            <div className=\"float-child\">\n              <p className=\"full-text\">\n                Advantages\n                <br />\n                - Useful for representing continuous data, such as change over\n                time <br />\n                - Allows possible extrapolation of data <br />\n                - Having a line constructed from multiple data points can allow\n                you to make estimates of missing data <br />- Allows comparison\n                of two or more items to see if there is any kind of connection\n                or relationship\n              </p>\n            </div>\n\n            <div className=\"float-child\">\n              <p className=\"full-text\">\n                Disadvantages\n                <br />\n                - Can be difficult to determine exact values at a given point of\n                the graph <br />- Too many lines, or even two lines that have\n                values that are too similar, can make comparing data difficult\n              </p>\n            </div>\n          </div>\n\n          <LazyImageProvider>\n            <Carousel>\n              {images.map((image, i) => (\n                <LazyImage aspectRatio={[10, 7]} src={image} key={i} />\n              ))}\n            </Carousel>\n          </LazyImageProvider>\n          <br />\n          <h5 className=\"gif-text-h5-dv\">B. Radar chart graph</h5>\n          <p className=\"full-text\">\n            {' '}\n            - Each variable is provided with an axis that starts from the\n            centre. <br />\n            - All axes are arranged radially, with equal distances between each\n            other, while maintaining the same scale between all axes. <br />-\n            Each variable value is plotted along its individual axis and all the\n            variables in a dataset and connected together to form a polygon.\n          </p>\n          <div className=\"float-container\">\n            <div className=\"float-child\">\n              <p className=\"full-text\">\n                Advantages\n                <br />\n                - Useful for seeing which variables have similar values or if\n                there are any outliers amongst each variable. <br />- Useful for\n                seeing which variables are scoring high or low within a dataset,\n                making them ideal for displaying performance.\n              </p>\n            </div>\n            <div className=\"float-child\">\n              <p className=\"full-text\">\n                Disadvantages\n                <br />\n                - Having multiple polygons in one Radar Chart makes it hard to\n                read. Too many variables creates too many axes and can also make\n                the chart hard to read. Radar Charts should be kept simple and\n                number of variables should be limited.\n                <br />- Another flaw with Radar Charts is that they’re not so\n                good for comparing values across each variable. Comparing values\n                all on a single straight axis is much easier.\n              </p>\n            </div>\n          </div>\n          <br />\n\n          <LazyImageProvider>\n            <Carousel>\n              {imagesRc.map((image, i) => (\n                <LazyImage aspectRatio={[10, 7]} src={image} key={i} />\n              ))}\n            </Carousel>\n          </LazyImageProvider>\n          <br />\n          <h5 className=\"gif-text-h5-dv\">C. Nightingale chart graph</h5>\n          <p className=\"full-text\">\n            {' '}\n            - This chart was famously used by statistician and medical reformer,\n            Florence Nightingale to communicate the avoidable deaths of soldiers\n            during the Crimean war.\n            <br />- Nightingale Rose Charts are drawn on a polar coordinate\n            grid. Each category or interval in the data is divided into equal\n            segments on this radial chart. How far each segment extends from the\n            centre of the polar axis depends on the value it represents.\n          </p>\n          <div className=\"float-container\">\n            <div className=\"float-child\">\n              <p className=\"full-text\">\n                Advantages\n                <br />- Each ring from the centre of the polar grid can be used\n                as a scale to plot the segment size and represent a higher\n                value. Therefore, it’s important to notice with Nightingale Rose\n                Charts that it’s the area, rather than the radius of a segment\n                that represents its value.\n              </p>\n            </div>\n            <div className=\"float-child\">\n              <p className=\"full-text\">\n                Disadvantages\n                <br />- The major flaw with Nightingale Rose Charts is that the\n                outer segments are given more emphasis because of their larger\n                area size. This disproportionately represents increases in\n                value.\n              </p>\n            </div>\n          </div>\n          <br />\n          <LazyImageProvider>\n            <Carousel>\n              {imagesNg.map((image, i) => (\n                <LazyImage aspectRatio={[10, 7]} src={image} key={i} />\n              ))}\n            </Carousel>\n          </LazyImageProvider>\n          <br />\n          <h5 className=\"gif-text-h5-dv\">D. Double-time Bar chart</h5>\n          <p className=\"full-text\">\n            {' '}\n            <b>Why to not usual bar chart for time series? </b>\n            <br /> <br />\n            Generally, visualization of time series data using bar charts has\n            the following challenges: <br />\n            <br />\n            <b>The break in the data between 11pm and midnight: </b>\n            <br />\n            <br />\n            -To summarize, the first problem has to do with being able to\n            understand the trends that occur around midnight (where this chart\n            breaks the data). <br /> <br />\n            -This is only problematic when something interesting is happening\n            around midnight (or whenever you choose to have your chart\n            begin/end). <br />\n            <br />\n            <b> The difficulty understanding the context of the time:</b> <br />\n            <br />- The second point about context has to do with the fact that\n            I don’t think about my days as starting at midnight and ending at\n            11:59pm. <br />\n            <br />- A more accurate representation of how I think of my days is\n            that they start sometime when I wake up, usually around 7am, and\n            they are broken up into “day-time” and “night-time”, and they end\n            more or less when I go to sleep. <br />\n            <br />\n            <br />\n            <b>Summary: </b>\n            <br />\n            <br />\n            The simple bar chart doesn’t solve these problems well. It presents\n            a hard break in the data, forcing the viewer to mentally connect the\n            end of the chart with the beginning. And it also forces the viewer\n            to think about the days in the context of midnight – 11pm, which is\n            not the natural categorization system we have for the hours of the\n            day. <br />\n            Therefore, for future research and development, it is suggested to\n            use a double-time bar chart to display the longitudinal sensor data.\n          </p>\n          <LazyImageProvider>\n            <Carousel>\n              {imagesBg.map((image, i) => (\n                <LazyImage aspectRatio={[10, 7]} src={image} key={i} />\n              ))}\n            </Carousel>\n          </LazyImageProvider>\n          <br />\n\n          <br />\n          <h5 className=\"gif-text-h5-dv\">E. Bubble chart graph</h5>\n          <p className=\"full-text\">\n            {' '}\n            -Each point is assigned a label or category . Each plotted point\n            then represents a third variable by the area of its circle. Colors\n            can also be used to distinguish between categories or used to\n            represent an additional data variable.\n            <br /> -Time can be shown either by having it as a variable on one\n            of the axis or by animating the data variables changing over time.\n            <br />\n            -Bubble Charts are typically used to compare and show the\n            relationships between categorised circles, by the use of positioning\n            and proportions. <br />- The overall picture of Bubble Charts can be\n            used to analyse for patterns/correlations.\n          </p>\n          <div className=\"float-container\">\n            <div className=\"float-child\">\n              <p className=\"full-text\">\n                Advantages\n                <br />\n                -Bubble charts allowing to display three variables without using\n                3D graphs. <br /> -Visually, size of the bubbles makes it very\n                easy to make relative comparisons and graph can convey the same\n                information as a line graph\n              </p>\n            </div>\n            <div className=\"float-child\">\n              <p className=\"full-text\">\n                Disadvantages\n                <br />- Too many bubbles can make the chart hard to read, so\n                Bubble Charts have a limited data size capacity.\n                <br />- Due to circle sizes, can be difficult to ascertain\n                actual values; difficult to read and understand; cannot be used\n                to display a lot of data.\n              </p>\n            </div>\n          </div>\n          <br />\n          <LazyImageProvider>\n            <Carousel>\n              {imagesBcg.map((image, i) => (\n                <LazyImage aspectRatio={[10, 7]} src={image} key={i} />\n              ))}\n            </Carousel>\n          </LazyImageProvider>\n        </div>\n        <div className=\"block\">\n          <h4 className=\"gif-text\">Web Accessibility Notes</h4>\n          <p className=\"full-text\">\n            Another part of the Data Visualization Research involved researching\n            Web Accessibility guidelines for web-based visualizations. This step is required for ensuring that \n          </p>\n        </div>\n      </div>\n      <Footer />\n    </>\n  )\n}\n\nexport default DataVisualization\n"]},"metadata":{},"sourceType":"module"}