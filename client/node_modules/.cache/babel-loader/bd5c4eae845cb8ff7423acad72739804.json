{"ast":null,"code":"var _jsxFileName = \"/Users/almazhan/Desktop/sonyc1/client/src/pages/CompilerPyCpp.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './CompilerPyCpp.css';\nimport EditorA from './EditorA';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CompilerPyCpp() {\n  _s();\n\n  const [code, setCode] = useState('');\n  const [output, setOutput] = useState('');\n  const [language, setLanguage] = useState('C++');\n  const [theme, setTheme] = useState('eclipse');\n\n  const handleSubmit = async () => {\n    const payload = {\n      language,\n      code\n    };\n\n    try {\n      const {\n        data\n      } = await axios.post('http://localhost:13000/run', payload);\n      setOutput(data.output);\n      console.log(data.output);\n    } catch ({\n      response\n    }) {\n      if (response) {\n        const errorMsg = response.data.err.stderr;\n        setOutput(errorMsg);\n        console.log(response);\n      } else {\n        setOutput('Error connecting to server');\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"header-text-ugsrp\",\n        children: \"Write, compile and run your C++ and Python code!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-compiler\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"lang\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Please choose your language: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: language,\n            onChange: e => {\n              setLanguage(e.target.value);\n              console.log(e.target.value);\n\n              if (e.target.value == 'Python') {\n                setTheme('colorforth');\n              } else {\n                setTheme('eclipse');\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"C++\",\n              children: \"C++\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Python\",\n              children: \"Python\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditorA, {\n          language: language,\n          displayName: language,\n          value: code,\n          theme: theme,\n          onChange: setCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-submit\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            children: \"Run\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pane\",\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 20\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n            value: output,\n            title: \"output\",\n            sandbox: \"allow-scripts\",\n            frameBorder: \"0\",\n            width: \"100%\",\n            height: \"100%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: output\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CompilerPyCpp, \"cl1Aw4Mxedk18e6GAFKf3zSmOPU=\");\n\n_c = CompilerPyCpp;\nexport default CompilerPyCpp;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompilerPyCpp\");","map":{"version":3,"sources":["/Users/almazhan/Desktop/sonyc1/client/src/pages/CompilerPyCpp.js"],"names":["React","Header","Footer","useState","axios","Link","EditorA","CompilerPyCpp","code","setCode","output","setOutput","language","setLanguage","theme","setTheme","handleSubmit","payload","data","post","console","log","response","errorMsg","err","stderr","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Header from '../components/Header'\nimport Footer from '../components/Footer'\nimport { useState } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport './CompilerPyCpp.css'\nimport EditorA from './EditorA'\n\nfunction CompilerPyCpp() {\n  const [code, setCode] = useState('')\n  const [output, setOutput] = useState('')\n  const [language, setLanguage] = useState('C++')\n  const [theme, setTheme] = useState('eclipse')\n  const handleSubmit = async () => {\n    const payload = {\n      language,\n      code,\n    }\n    try {\n      const { data } = await axios.post('http://localhost:13000/run', payload)\n      setOutput(data.output)\n      console.log(data.output)\n    } catch ({ response }) {\n      if (response) {\n        const errorMsg = response.data.err.stderr\n        setOutput(errorMsg)\n        console.log(response)\n      } else {\n        setOutput('Error connecting to server')\n      }\n    }\n  }\n  return (\n    <>\n      <Header />\n      <div>\n        <h2 className=\"header-text-ugsrp\">\n          Write, compile and run your C++ and Python code!\n        </h2>\n        <div className=\"block-compiler\">\n          <div id=\"lang\">\n            <label>Please choose your language: </label>\n            <select\n              value={language}\n              onChange={(e) => {\n                setLanguage(e.target.value)\n                console.log(e.target.value)\n                if (e.target.value == 'Python') {\n                  setTheme('colorforth')\n                } else {\n                  setTheme('eclipse')\n                }\n              }}\n            >\n              <option value=\"C++\">C++</option>\n              <option value=\"Python\">Python</option>\n            </select>\n          </div>\n          <br />\n\n          <EditorA\n            language={language}\n            displayName={language}\n            value={code}\n            theme={theme}\n            onChange={setCode}\n          />\n          <br />\n          <div className=\"btn-submit\">\n            <button onClick={handleSubmit}>Run</button>\n          </div>\n          <div className=\"pane\">\n            <br /> <br /> <br />\n            <iframe\n              value={output}\n              title=\"output\"\n              sandbox=\"allow-scripts\"\n              frameBorder=\"0\"\n              width=\"100%\"\n              height=\"100%\"\n            />\n          </div>\n          <p>{output}</p>\n        </div>\n      </div>\n      <Footer />\n    </>\n  )\n}\n\nexport default CompilerPyCpp\n"]},"metadata":{},"sourceType":"module"}