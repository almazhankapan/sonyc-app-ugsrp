{"ast":null,"code":"var _jsxFileName = \"/Users/almazhan/Desktop/sonyc1/client/src/components/Carousel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport EmblaCarouselReact from 'embla-carousel-react';\nimport { PrevBtn, NextBtn, DotBtn } from './CarouselButtons';\nimport './carousel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmblaCarouselComponent = ({\n  children\n}) => {\n  _s();\n\n  const [carousel, initCarousel] = useState(null);\n  const [prevBtnEnabled, togglePrevBtnEnabled] = useState(false);\n  const [nextBtnEnabled, toggleNextBtnEnabled] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [scrollSnaps, setScrollSnaps] = useState([]);\n  const scrollPrev = useCallback(() => carousel.scrollPrev(), [carousel]);\n  const scrollNext = useCallback(() => carousel.scrollNext(), [carousel]);\n  const scrollTo = useCallback(index => carousel.scrollTo(index), [carousel]);\n  useEffect(() => {\n    const onSelect = () => {\n      setSelectedIndex(carousel.selectedScrollSnap());\n      togglePrevBtnEnabled(carousel.canScrollPrev());\n      toggleNextBtnEnabled(carousel.canScrollNext());\n    };\n\n    if (carousel) {\n      setScrollSnaps(carousel.scrollSnapList());\n      carousel.on('select', onSelect);\n      onSelect();\n    }\n\n    return () => carousel && carousel.destroy();\n  }, [carousel]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel__wrap\",\n      children: [/*#__PURE__*/_jsxDEV(EmblaCarouselReact, {\n        className: \"carousel__viewport\",\n        emblaRef: initCarousel,\n        options: {\n          loop: false\n        },\n        htmlTagName: \"div\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"carousel__container\",\n          children: children.map((Child, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"carousel__item\",\n            children: Child\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PrevBtn, {\n        onClick: scrollPrev,\n        enabled: prevBtnEnabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NextBtn, {\n        onClick: scrollNext,\n        enabled: nextBtnEnabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel__dots\",\n      children: scrollSnaps.map((snap, index) => /*#__PURE__*/_jsxDEV(DotBtn, {\n        selected: index === selectedIndex,\n        onClick: () => scrollTo(index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EmblaCarouselComponent, \"RJyFcgpthmCoaXpJ8WnhTCIn5zc=\");\n\n_c = EmblaCarouselComponent;\nexport default EmblaCarouselComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmblaCarouselComponent\");","map":{"version":3,"sources":["/Users/almazhan/Desktop/sonyc1/client/src/components/Carousel.js"],"names":["React","useState","useEffect","useCallback","EmblaCarouselReact","PrevBtn","NextBtn","DotBtn","EmblaCarouselComponent","children","carousel","initCarousel","prevBtnEnabled","togglePrevBtnEnabled","nextBtnEnabled","toggleNextBtnEnabled","selectedIndex","setSelectedIndex","scrollSnaps","setScrollSnaps","scrollPrev","scrollNext","scrollTo","index","onSelect","selectedScrollSnap","canScrollPrev","canScrollNext","scrollSnapList","on","destroy","loop","map","Child","snap"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\nimport EmblaCarouselReact from 'embla-carousel-react'\nimport { PrevBtn, NextBtn, DotBtn } from './CarouselButtons'\nimport './carousel.css'\n\nconst EmblaCarouselComponent = ({ children }) => {\n  const [carousel, initCarousel] = useState(null)\n  const [prevBtnEnabled, togglePrevBtnEnabled] = useState(false)\n  const [nextBtnEnabled, toggleNextBtnEnabled] = useState(false)\n  const [selectedIndex, setSelectedIndex] = useState(0)\n  const [scrollSnaps, setScrollSnaps] = useState([])\n\n  const scrollPrev = useCallback(() => carousel.scrollPrev(), [carousel])\n  const scrollNext = useCallback(() => carousel.scrollNext(), [carousel])\n  const scrollTo = useCallback((index) => carousel.scrollTo(index), [carousel])\n\n  useEffect(() => {\n    const onSelect = () => {\n      setSelectedIndex(carousel.selectedScrollSnap())\n      togglePrevBtnEnabled(carousel.canScrollPrev())\n      toggleNextBtnEnabled(carousel.canScrollNext())\n    }\n    if (carousel) {\n      setScrollSnaps(carousel.scrollSnapList())\n      carousel.on('select', onSelect)\n      onSelect()\n    }\n    return () => carousel && carousel.destroy()\n  }, [carousel])\n\n  return (\n    <div className=\"carousel\">\n      <div className=\"carousel__wrap\">\n        <EmblaCarouselReact\n          className=\"carousel__viewport\"\n          emblaRef={initCarousel}\n          options={{ loop: false }}\n          htmlTagName=\"div\"\n        >\n          <div className=\"carousel__container\">\n            {children.map((Child, index) => (\n              <div className=\"carousel__item\" key={index}>\n                {Child}\n              </div>\n            ))}\n          </div>\n        </EmblaCarouselReact>\n        <PrevBtn onClick={scrollPrev} enabled={prevBtnEnabled} />\n        <NextBtn onClick={scrollNext} enabled={nextBtnEnabled} />\n      </div>\n      <div className=\"carousel__dots\">\n        {scrollSnaps.map((snap, index) => (\n          <DotBtn\n            selected={index === selectedIndex}\n            onClick={() => scrollTo(index)}\n            key={index}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default EmblaCarouselComponent\n"]},"metadata":{},"sourceType":"module"}