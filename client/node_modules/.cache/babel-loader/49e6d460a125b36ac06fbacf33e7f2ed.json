{"ast":null,"code":"import _slicedToArray from\"/Users/almazhan/Desktop/code-editor/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'codemirror/lib/codemirror.css';import'codemirror/theme/material.css';import'codemirror/theme/3024-night.css';import'codemirror/mode/xml/xml';import'codemirror/mode/javascript/javascript';import'codemirror/mode/css/css';import{Controlled as ControlledEditor}from'react-codemirror2';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faCompressAlt,faExpandAlt}from'@fortawesome/free-solid-svg-icons';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Editor(props){var language=props.language,displayName=props.displayName,value=props.value,onChange=props.onChange;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];function handleChange(editor,data,value){onChange(value);}return/*#__PURE__*/_jsxs(\"div\",{className:\"editor-container \".concat(open?'':'collapsed'),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"editor-title\",children:[displayName,/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"expand-collapse-btn\",onClick:function onClick(){return setOpen(function(prevOpen){return!prevOpen;});},children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:open?faCompressAlt:faExpandAlt})})]}),/*#__PURE__*/_jsx(ControlledEditor,{onBeforeChange:handleChange,value:value,className:\"code-mirror-wrapper\",options:{lineWrapping:true,lint:true,mode:language,theme:'3024-night',lineNumbers:true}})]});}","map":{"version":3,"sources":["/Users/almazhan/Desktop/code-editor/client/src/pages/Editor.js"],"names":["React","useState","Controlled","ControlledEditor","FontAwesomeIcon","faCompressAlt","faExpandAlt","Editor","props","language","displayName","value","onChange","open","setOpen","handleChange","editor","data","prevOpen","lineWrapping","lint","mode","theme","lineNumbers"],"mappings":"iKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAO,+BAAP,CACA,MAAO,+BAAP,CACA,MAAO,iCAAP,CACA,MAAO,yBAAP,CACA,MAAO,uCAAP,CACA,MAAO,yBAAP,CACA,OAASC,UAAU,GAAIC,CAAAA,gBAAvB,KAA+C,mBAA/C,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,aAAT,CAAwBC,WAAxB,KAA2C,mCAA3C,C,wFAEA,cAAe,SAASC,CAAAA,MAAT,CAAgBC,KAAhB,CAAuB,CACpC,GAAQC,CAAAA,QAAR,CAAmDD,KAAnD,CAAQC,QAAR,CAAkBC,WAAlB,CAAmDF,KAAnD,CAAkBE,WAAlB,CAA+BC,KAA/B,CAAmDH,KAAnD,CAA+BG,KAA/B,CAAsCC,QAAtC,CAAmDJ,KAAnD,CAAsCI,QAAtC,CACA,cAAwBX,QAAQ,CAAC,IAAD,CAAhC,wCAAOY,IAAP,eAAaC,OAAb,eAEA,QAASC,CAAAA,YAAT,CAAsBC,MAAtB,CAA8BC,IAA9B,CAAoCN,KAApC,CAA2C,CACzCC,QAAQ,CAACD,KAAD,CAAR,CACD,CAED,mBACE,aAAK,SAAS,4BAAsBE,IAAI,CAAG,EAAH,CAAQ,WAAlC,CAAd,wBACE,aAAK,SAAS,CAAC,cAAf,WACGH,WADH,cAEE,eACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,qBAFZ,CAGE,OAAO,CAAE,yBAAMI,CAAAA,OAAO,CAAC,SAACI,QAAD,QAAc,CAACA,QAAf,EAAD,CAAb,EAHX,uBAKE,KAAC,eAAD,EAAiB,IAAI,CAAEL,IAAI,CAAGR,aAAH,CAAmBC,WAA9C,EALF,EAFF,GADF,cAWE,KAAC,gBAAD,EACE,cAAc,CAAES,YADlB,CAEE,KAAK,CAAEJ,KAFT,CAGE,SAAS,CAAC,qBAHZ,CAIE,OAAO,CAAE,CACPQ,YAAY,CAAE,IADP,CAEPC,IAAI,CAAE,IAFC,CAGPC,IAAI,CAAEZ,QAHC,CAIPa,KAAK,CAAE,YAJA,CAKPC,WAAW,CAAE,IALN,CAJX,EAXF,GADF,CA0BD","sourcesContent":["import React, { useState } from 'react'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/material.css'\nimport 'codemirror/theme/3024-night.css'\nimport 'codemirror/mode/xml/xml'\nimport 'codemirror/mode/javascript/javascript'\nimport 'codemirror/mode/css/css'\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons'\n\nexport default function Editor(props) {\n  const { language, displayName, value, onChange } = props\n  const [open, setOpen] = useState(true)\n\n  function handleChange(editor, data, value) {\n    onChange(value)\n  }\n\n  return (\n    <div className={`editor-container ${open ? '' : 'collapsed'}`}>\n      <div className=\"editor-title\">\n        {displayName}\n        <button\n          type=\"button\"\n          className=\"expand-collapse-btn\"\n          onClick={() => setOpen((prevOpen) => !prevOpen)}\n        >\n          <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\n        </button>\n      </div>\n      <ControlledEditor\n        onBeforeChange={handleChange}\n        value={value}\n        className=\"code-mirror-wrapper\"\n        options={{\n          lineWrapping: true,\n          lint: true,\n          mode: language,\n          theme: '3024-night',\n          lineNumbers: true,\n        }}\n      />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}